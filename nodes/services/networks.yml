networks:
  ipv6_pool_net:
    name: ipv6_pool_net
    driver: bridge
    enable_ipv4: false
    enable_ipv6: true
    ipam:
      config:
        # Will use for automatic addressing in cases
        # whereby no static addresses are assigned to
        # the given container
        #
        # Also will install a route to IPV6_POOL_SUBNET
        # _via_ the bridge device, enabling access to
        # the containers attached to said bridge (with
        # IPv6 addresses in this range)
        - subnet: ${IPV6_POOL_SUBNET}
    driver_opts:
      # Disables any NAT and make this behave as if the
      # containers are simply on the bridge (nothing
      # in between them and the host)
      #
      # Will, however, add rules still to only allow
      # access to expose `ports` (although these will
      # not be using the docker proxy now)
      com.docker.network.bridge.gateway_mode_ipv6: routed


services:
  node1:
    container_name: node1
    build:
      context: node1/
    networks:
      ipv6_pool_net:
        ipv6_address: ${IPV6_NODE1_ADDR}
    environment:
      - "DOMAIN=${IPV6_NODE1_DOMAIN}"
    ports:
      - "[::]:80:80/tcp"
      - "[::]:80:80/udp"
      - "[::]:443:443/tcp"
      - "[::]:443:443/udp"
  node2:
    container_name: node2
    build:
      context: node1/
    networks:
      ipv6_pool_net:
        ipv6_address: ${IPV6_NODE2_ADDR}
    environment:
      - "DOMAIN=${IPV6_NODE2_DOMAIN}"
    ports:
      - "[::]:80:80/tcp"
      - "[::]:80:80/udp"
      - "[::]:443:443/tcp"
      - "[::]:443:443/udp"
  node3:
    container_name: node3
    build:
      context: node1/
    networks:
      ipv6_pool_net:
        ipv6_address: ${IPV6_NODE3_ADDR}
    environment:
      - "DOMAIN=${IPV6_NODE3_DOMAIN}"
    ports:
      - "[::]:80:80/tcp"
      - "[::]:80:80/udp"
      - "[::]:443:443/tcp"
      - "[::]:443:443/udp"
  node4:
    container_name: node4
    build:
      context: node1/
    networks:
      ipv6_pool_net:
        ipv6_address: ${IPV6_NODE4_ADDR}
    environment:
      - "DOMAIN=${IPV6_NODE4_DOMAIN}"
    ports:
      - "[::]:80:80/tcp"
      - "[::]:80:80/udp"
      - "[::]:443:443/tcp"
      - "[::]:443:443/udp"
