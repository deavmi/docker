networks:
  mainNet:
    driver: bridge
    name: mainNet
    enable_ipv6: true
    ipam:
      config:
        - subnet: fde4:492a:fc7f::/48

volumes:
  i2pd_data:

include:
  - git.yml

services:
  host-statistics:
    extends:
      file: ../../services/node_exporter/compose.yml
      service: statistics

  yggdrasil:
    extends:
      file: ../../services/yggdrasil/compose.yml
      service: yggdrasil

  i2pd:
    extends:
      file: ../../services/i2pd/compose.yml
      service: i2pd
    environment:
      # Disable IPv4
      - DISABLE_IPV4=yes
      
      # Enable floodfill
      - FLOODFILL=yes
      
      # Data directory is `/data`
      - DATA_DIR=/data
      
      # Configuration file path
      # (TODO: --conf)
    networks:
      - mainNet
      # TODO: For Yggdrasil we mayneed to place
      # this into the same network namespace so
      # that i2pd can bind to the tun0 interface
      # TODO: Actually maybe not if host mode
      # is fine
    volumes:
      - i2pd_data:/data
      
      # Configuration file (TODO: --conf)
      - /mnt/datadisk/volumes/i2pd/:/conf:z
      
      # TODO: Tunnels configuration file
    ports:
      # SSU2
      - "6245:6245/tcp"

      # NTCP2
      - "6246:6246/tcp"

      # Web console
      - "8182:8182/tcp"

  ircd:
    extends:
      file: ../../services/ircd/compose.yml
      service: ircd
    networks:
      - mainNet
    # Assume default ports are being exposed
    # - "6667:6667/tcp"
    # - "6697:6697/tcp"
    # - "6900:6900/tcp"

  webirc:
    extends:
      file: ../../services/webirc/compose.yml
      service: webirc
    build:
      context: webirc/
    # depends_on:
      # - ircd
    networks:
      - mainNet

  sshchat:
    extends:
      file: ../../services/sshchat/compose.yml
      service: sshchat
    networks:
      - mainNet
    ports:
      - "2000:2022/tcp"

  matterbridge:
    extends:
      file: ../../services/matterbridge/compose.yml
      service: matterbridge
    depends_on:
      - ircd
      - sshchat
    networks:
      - mainNet

  web:
    container_name: web
    build:
      context: web/
    depends_on:
      - gitea
    networks:
      - mainNet
    environment:
      - DOMAIN=services.deavmi.assigned.network
    ports:
      - "[::]:80:80/tcp"
      - "[::]:80:80/udp" # TODO: Does quick run on non-HTTPS?
      - "[::]:443:443/tcp"
      - "[::]:443:443/udp"
      - "[::]:2019:2019/tcp" # TODO: Remove this it is FULL ADMIN PORT (only prometheus must be accessing this)
