networks:
  gitea_db_net:
    driver: bridge
    name: gitea_db_net
    enable_ipv6: true
    ipam:
      config:
        - subnet: fde4:492b:fc7f::/48
  gitea_redis_net:
    driver: bridge
    name: gitea_redis_net
    enable_ipv6: true
    ipam:
      config:
        - subnet: fde4:452b:fc7f::/48

volumes:
  redis_gitea_data:

services:

  # Reverse proxy with HTTPS for `gitea_old`
  gitea_old_web:
    build:
      context: gitea_old_web/
    container_name: gitea_old_web
    depends_on:
      - gitea_old
    # Run in same network namespace as `gitea_old`
    # so that we can bind to its network interface
    network_mode: service:gitea_old
    environment:
      - "DOMAIN=${GITEA_OLD_DOMAIN}"

  # Actual Gitea service `gitea_old`
  gitea_old:
    build:
      context: gitea_old/
    container_name: gitea_old
    depends_on:
      - redis-gitea
      - minio
    networks:
      mainNet:
      gitea_redis_net:
      ipv6_pool_net:
        ipv6_address: ${GITEA_OLD_IPV6_ADDR}
    env_file:
      # has JWT token inside
      - path: .gitea.old
        required: true
      # Has minio settings inside
      - path: .gitea
        required: true
    environment:
      - USER_UID=1000
      - USER_GID=1000

      # Instance settings
      - GITEA__APP_NAME=DGitea1
      - GITEA__ui0x2Emeta__AUTHOR=Deavmi's (Old) Forge
      - GITEA__ui0x2Emeta__DESCRIPTION=Grandpa code üë¥Ô∏è

      
      # Gitea DB configuraiton
      - GITEA__database__DB_TYPE=sqlite3
      - GITEA__database__DB_PATH=/data/gitea/gitea.db
      - GITEA__database__DB_NAME=gitea

      - GITEA__service__DISABLE_REGISTRATION=true
      - GITEA__lfs__PATH=/data/git/lfs

      # Server settings
      - GITEA__server__APP_DATA_PATH=/data/gitea
      - GITEA__server__DOMAIN=${GITEA_OLD_DOMAIN}
      - GITEA__server__SSH_DOMAIN=${GITEA_OLD_DOMAIN}
      - GITEA__server__HTTP_ADDR=${GITEA_OLD_IPV6_ADDR}
      - GITEA__server__HTTP_PORT=3000
      - GITEA__server__ROOT_URL=/
      - GITEA__server__DISABLE_SSH=false
      - GITEA__server__SSH_PORT=2023 # TODO: Fix this to be just 21 and use an envvar
      # FIXME: Would have used `22` but _somehow_ it was in use
      # inthe container _own_ network namespace
      - GITEA__server__SSH_LISTEN_PORT=21
      - GITEA__server__START_SSH_SERVER=true

      # For session management
      - GITEA__session__PROVIDER=redis
      - GITEA__session__PROVIDER_CONFIG=redis://redis-gitea:6379
      - GITEA__session__COOKIE_NAME=gitea-old-cookie

      # For cache management
      - GITEA__cache__ADAPTER=redis
      - GITEA__cache__HOST=redis://redis-gitea:6379

      # Automatic install based on environment varables
      - GITEA__security__INSTALL_LOCK=true

      # MinIO storage
      - GITEA__storage__STORAGE_TYPE=minio
      - GITEA__storage__MINIO_BUCKET=giteaold
      - GITEA__storage__MINIO_ENDPOINT=minio:9000

      # Logging configuration TODO: Maybe lower later
      - GITEA__log__LEVEL=Trace

      # For metrics
      - GITEA__metrics__ENABLED=true
    volumes:
      - ${GITEA_OLD_DATA_PATH}:/data:z
    # ports:
      # SSH server (TODO: Make this just 22)
      # - "2023:21/tcp"

    # In this case it means allow access (firewalling rule)
    ports:
      - 3000/tcp

      # Expose on behalf of the reverse proxy
      # as it will be using our network interface
      # - "[::]:80:80/tcp"
      # - "[::]:80:80/udp"
      # - "[::]:443:443/tcp"
      # - "[::]:443:443/udp"

  gitea:
    extends:
      file: ../../services/gitea/compose.yml
      service: gitea
    build:
      context: gitea/
    container_name: gitea
    depends_on:
      - db-gitea
      - minio
      - redis-gitea
    # Has minio settings inside
    env_file:
      - path: .gitea
        required: true
    environment:
      # Gitea DB configuraiton
      - FORGEJO__database__DB_TYPE=postgres
      - FORGEJO__database__HOST=db-gitea:5432
      - FORGEJO__database__NAME=${GITEA_DB_NAME}
      - FORGEJO__database__USER=${GITEA_DB_USER}
      - FORGEJO__database__PASSWD=${GITEA_DB_PASS}

      # Server settings
      - FORGEJO__server__ROOT_URL=/
      - FORGEJO__server__DOMAIN=${GITEA_NEW_DOMAIN}

      # Instance settings
      - FORGEJO__APP_NAME=DForge1
      - FORGEJO__ui0x2Emeta__AUTHOR=Deavmi's Forge
      - FORGEJO__ui0x2Emeta__DESCRIPTION=Where code is grinded out ‚öôÔ∏è
      - FORGEJO__ui__DEFAULT_THEME=forgejo-dark

      # Forgejo actions
      - FORGEJO__ACTIONS__ENABLED=true
      - FORGEJO__ACTIONS__LOG_RETENTION_DAYS=365
      - FORGEJO__ACTIONS__ARTIFACT_RETENTION_DAYS=90

      # Federation
      - FORGEJO__FEDERATION__ENABLED=true
      - FORGEJO__FEDERATION__SHARE_USER_STATISTICS=true

      # SSH server
      - FORGEJO__server__DISABLE_SSH=false
      - FORGEJO__server__SSH_PORT=2022
      - FORGEJO__server__SSH_DOMAIN=${GITEA_NEW_DOMAIN}
        # FIXME: Would have used `22` but _somehow_ it was in use
      # inthe container _own_ network namespace
      - FORGEJO__server__SSH_LISTEN_PORT=21
      - FORGEJO__server__START_SSH_SERVER=true

      # Automatic install based on environment varables
      - FORGEJO__security__INSTALL_LOCK=true

      # For session management
      - FORGEJO__session__PROVIDER=redis
      - FORGEJO__session__PROVIDER_CONFIG=redis://redis-gitea:6379
      - FORGEJO__session__COOKIE_NAME=gitea-cookie

      # For cache management
      - FORGEJO__cache__ADAPTER=redis
      - FORGEJO__cache__HOST=redis://redis-gitea:6379

      # MinIO storage
      - FORGEJO__storage__STORAGE_TYPE=minio
      - FORGEJO__storage__MINIO_BUCKET=gitea
      - FORGEJO__storage__MINIO_ENDPOINT=minio:9000

      # Logging configuration TODO: Maybe lower later
      - FORGEJO__log__LEVEL=Trace

      # For metrics
      - FORGEJO__metrics__ENABLED=true
    networks:
      mainNet:
      gitea_db_net:
      minio_net:
      gitea_redis_net:
      ipv6_pool_net:
        ipv6_address: ${GITEA_NEW_IPV6_ADDR}
    ports:
      # SSH server
      - "2022:21/tcp"
  
  db-gitea:
    extends:
      file: ../../services/postgres/compose.yml
      service: postgres
    container_name: gitea_db
    environment:
      - POSTGRES_DB=${GITEA_DB_NAME}
      - POSTGRES_USER=${GITEA_DB_USER}
      - POSTGRES_PASSWORD=${GITEA_DB_PASS}
    # Set effective UID/GID
    user: ${USER_UID}:${USER_GID}
    volumes:
      # Path for Postgres to store data
      - "${GITEA_POSTGRES_PATH}:/var/lib/postgresql/data:z"
    networks:
      - gitea_db_net

  # TODO: This should be a redis we use for ALL
  # our services then
  redis-gitea:
    image: redis:latest
    container_name: redis-gitea
    restart: unless-stopped
    user: ${USER_UID}:${USER_GID}
    volumes:
      # For Redis persistence
      - ${GITEA_REDITS_DATA_PATH}:/data:z
    networks:
      - gitea_redis_net
    
