services:
  sshchat:
    extends:
      file: ../../services/sshchat/compose.yml
      service: sshchat
    networks:
      - mainNet
    ports:
      - "2000:2022/tcp"

  matterbridge:
    extends:
      file: ../../services/matterbridge/compose.yml
      service: matterbridge
    build:
      context: matterbridge/
    depends_on:
      - ircd
      - sshchat
    networks:
      - mainNet


  # Reverse proxy with HTTP just because
  # ejabberd cannot bind on port 80
  # (See: https://docs.ejabberd.im/admin/configuration/basic/#setting-up-acme)
  xmpp_acme_passthrough:
    build:
      context: im/ejabberd/passthrough
    container_name: xmpp_acme_passthrough
    # Run in same network namespace as `xmpp`
    # so that we can bind to its network interface
    # and hence will use its IPv6 address
    network_mode: service:xmpp
    environment:
      - "WHERE_TO_ADDR=::1"
      - "WHERE_TO_PORT=5280"

  # Ejabberd XMPP server
  xmpp:
    build:
      context: ejabberd/
    container_name: xmpp
    env_file:
      # Bring in `REGISTER_ADMIN_PASSWORD`
      - path: .xmpp
        required: true
    environment:
      - EJABBERD_MACRO_ADMIN=admin@${XMPP_DOMAIN}
      - EJABBERD_MACRO_HOST=${XMPP_DOMAIN}
    # Set effective uid/gid
    # TODO: Fix this and re-enable it
    # user: ${USER_UID}:${USER_GID}
    networks:
      ipv6_pool_net:
        ipv6_address: ${XMPP_ADDR}
    volumes:
      # Database storage
      - ${XMPP_DATA_PATH}:/opt/ejabberd/database:z

      # Uploads storage
      - ${XMPP_UPLOADS_PATH}:/opt/ejabberd/upload:z
    ports:
      - "5222/tcp"
      - "5269/tcp"
      
      # HTTP (also used for ACME challenges)
      - "5280/tcp"
      
      - "5443/tcp"

      # Allow on behalf of `xmpp_acme_passthrough`
      - "80/tcp"
